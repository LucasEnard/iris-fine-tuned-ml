 do $SYSTEM.OBJ.Load("/irisdev/app/Installer.cls", "ck")
 set sc = ##class(App.Installer).setup()

 zn "IRISAPP"
 zpm "install pex-embbeded-python"
 zpm "install csvgen"
 do $System.OBJ.LoadDir("/irisdev/app/src","ck",,1)
 zw $SYSTEM.OBJ.ImportDir("/irisdev/app/src", "*.cls", "cubk", .tErrors, 1)

 set fncsv="/irisdev/app/misc/dataset/dataset.txt"
 set tablename="iris.Review"
 set dlm=";"

 set importsql="LOAD DATA FROM FILE '"_fncsv_"'"_" INTO "_tablename_" USING {""from"":{""file"":{""columnseparator"":"""_dlm_""""_",""header"":""1"""_"}}}"
 set tStatement = ##class(%SQL.Statement).%New()
 set sc = tStatement.%Prepare(importsql)
 set rset = tStatement.%Execute()

 zpm "install sslclient"

 //Register Python code
 zw ##class(Grongier.PEX.Utils).RegisterComponent("bo","MLOperation","/irisdev/app/src/python/",1,"Python.MLOperation")
 zw ##class(Grongier.PEX.Utils).RegisterComponent("bo","TuningOperation","/irisdev/app/src/python/",1,"Python.TuningOperation")
 set ^EnsPortal.Settings("SuperUser","LastProduction")	= "iris.Production"

 zn "%SYS"
 Do ##class(Security.Users).UnExpireUserPasswords("*")

 do ##class(Security.Services).Get("%Service_CallIn",.prop)
 set prop("Enabled")=1
 set prop("AutheEnabled")=48
 do ##class(Security.Services).Modify("%Service_CallIn",.prop)

halt
